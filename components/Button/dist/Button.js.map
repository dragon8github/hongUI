{"version":3,"sources":["Button/src/Button.js"],"names":["getPath","jsPath","document","currentScript","src","js","scripts","last","length","i","readyState","substring","lastIndexOf","setStyle","cssname","head","getElementsByTagName","linkTag","createElement","href","setAttribute","appendChild","win","Vue","Button","extend","template","inject","elFormItem","default","props","type","String","size","icon","nativeType","loading","Boolean","disabled","plain","autofocus","round","computed","_elFormItemSize","elFormItemSize","buttonSize","$ELEMENT","methods","handleClick","evt","$emit","handleInnerClick","stopPropagation","component","window"],"mappings":";;AAAA;AACA,IAAIA,UAAU,YAAU;AAAC,MAAIC,SAASC,SAASC,aAAT,GAAyBD,SAASC,aAAT,CAAuBC,GAAhD,GAAsD,YAAU;AAAC,QAAIC,KAAKH,SAASI,OAAlB;AAAA,QAA2BC,OAAOF,GAAGG,MAAH,GAAY,CAA9C;AAAA,QAAiDJ,GAAjD,CAAsD,KAAI,IAAIK,IAAIF,IAAZ,EAAkBE,IAAI,CAAtB,EAAyBA,GAAzB,EAA6B;AAAC,UAAGJ,GAAGI,CAAH,EAAMC,UAAN,KAAqB,aAAxB,EAAsC;AAACN,cAAMC,GAAGI,CAAH,EAAML,GAAZ,CAAiB;AAAQ;AAAE,KAAC,OAAOA,OAAOC,GAAGE,IAAH,EAASH,GAAvB;AAA6B,GAA/L,EAAnE,CAAsQ,OAAOH,OAAOU,SAAP,CAAiB,CAAjB,EAAoBV,OAAOW,WAAP,CAAmB,GAAnB,IAA0B,CAA9C,CAAP;AAA0D,CAA3U,EAAd;AACA;AACA,IAAIC,WAAW,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;AAAC,MAAIC,OAAOb,SAASc,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAX,CAAqD,IAAMC,UAAUf,SAASgB,aAAT,CAAuB,MAAvB,CAAhB,CAA+CD,QAAQE,IAAR,GAAenB,UAAUc,OAAzB,CAAiCG,QAAQG,YAAR,CAAqB,KAArB,EAA4B,YAA5B,EAA0CH,QAAQG,YAAR,CAAqB,MAArB,EAA6B,UAA7B,EAAyCL,KAAKM,WAAL,CAAiBJ,OAAjB;AAA4B,CAA/R,CAEC,CAAC,UAAUK,GAAV,EAAeC,GAAf,EAAoB;AAClB;;AAEAV,WAAS,YAAT;AACAA,WAAS,UAAT;;AAEA,MAAIW,SAASD,IAAIE,MAAJ,CAAW;AACpBC,ugCADoB;AAwBpBC,YAAQ;AACNC,kBAAY;AACVC,iBAAS;AADC;AADN,KAxBY;AA6BpBC,WAAO;AACLC,YAAM;AACJA,cAAMC,MADF;AAEJH,iBAAS;AAFL,OADD;AAKLI,YAAMD,MALD;AAMLE,YAAM;AACJH,cAAMC,MADF;AAEJH,iBAAS;AAFL,OAND;AAULM,kBAAY;AACVJ,cAAMC,MADI;AAEVH,iBAAS;AAFC,OAVP;AAcLO,eAASC,OAdJ;AAeLC,gBAAUD,OAfL;AAgBLE,aAAOF,OAhBF;AAiBLG,iBAAWH,OAjBN;AAkBLI,aAAOJ;AAlBF,KA7Ba;AAiDpBK,cAAU;AACRC,qBADQ,6BACU;AAChB,eAAO,CAAC,KAAKf,UAAL,IAAmB,EAApB,EAAwBgB,cAA/B;AACD,OAHO;AAIRC,gBAJQ,wBAIK;AACX,eAAO,KAAKZ,IAAL,IAAa,KAAKU,eAAlB,IAAqC,CAAC,KAAKG,QAAL,IAAiB,EAAlB,EAAsBb,IAAlE;AACD;AANO,KAjDU;AAyDpBc,aAAS;AACPC,iBADO,uBACKC,GADL,EACU;AACf,aAAKC,KAAL,CAAW,OAAX,EAAoBD,GAApB;AACD,OAHM;AAIPE,sBAJO,4BAIUF,GAJV,EAIe;AACpB,YAAI,KAAKX,QAAT,EAAmB;AACjBW,cAAIG,eAAJ;AACD;AACF;AARM;AAzDW,GAAX,CAAb;AAoEA7B,MAAI8B,SAAJ,CAAc,aAAd,EAA6B7B,MAA7B;AACH,CA3EA,EA2EE8B,MA3EF,EA2EU/B,GA3EV","file":"Button.js","sourcesContent":["// 获取当前js文件所在的路径\nvar getPath = function(){var jsPath = document.currentScript ? document.currentScript.src : function(){var js = document.scripts ,last = js.length - 1 ,src; for(var i = last; i > 0; i--){if(js[i].readyState === 'interactive'){src = js[i].src; break; } } return src || js[last].src; }(); return jsPath.substring(0, jsPath.lastIndexOf('/') + 1); }();\n// 加载样式文件\nvar setStyle = function setStyle(cssname) {var head = document.getElementsByTagName('head')[0]; const linkTag = document.createElement('link');linkTag.href = getPath + cssname;linkTag.setAttribute('rel', 'stylesheet');linkTag.setAttribute('type', 'text/css');head.appendChild(linkTag); }\n\n;(function (win, Vue) {\n    'use strict';\n\n    setStyle(\"Button.css\")\n    setStyle(\"icon.css\")\n\n    var Button = Vue.extend({\n        template: `\n                <button\n                    class=\"hong-button\"\n                    @click=\"handleClick\"\n                    :disabled=\"disabled\"\n                    :autofocus=\"autofocus\"\n                    :type=\"nativeType\"\n                    :class=\"[\n                      type ? 'hong-button--' + type : '',\n                      buttonSize ? 'hong-button--' + buttonSize : '',\n                      {\n                        'is-disabled': disabled,\n                        'is-loading': loading,\n                        'is-plain': plain,\n                        'is-round': round\n                      }\n                    ]\"\n                  >\n                    <i class=\"hong-icon-loading\" v-if=\"loading\" @click=\"handleInnerClick\"></i>\n                    <i :class=\"icon\" v-if=\"icon && !loading\" @click=\"handleInnerClick\"></i>\n                    <span v-if=\"$slots.default\" @click=\"handleInnerClick\"><slot></slot></span>\n                  </button>\n        `,\n        inject: {\n          elFormItem: {\n            default: ''\n          }\n        },\n        props: {\n          type: {\n            type: String,\n            default: 'default'\n          },\n          size: String,\n          icon: {\n            type: String,\n            default: ''\n          },\n          nativeType: {\n            type: String,\n            default: 'button'\n          },\n          loading: Boolean,\n          disabled: Boolean,\n          plain: Boolean,\n          autofocus: Boolean,\n          round: Boolean\n        },\n        computed: {\n          _elFormItemSize() {\n            return (this.elFormItem || {}).elFormItemSize;\n          },\n          buttonSize() {\n            return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n          }\n        },\n        methods: {\n          handleClick(evt) {\n            this.$emit('click', evt);\n          },\n          handleInnerClick(evt) {\n            if (this.disabled) {\n              evt.stopPropagation();\n            }\n          }\n        }\n    })    \n    Vue.component('hong-button', Button);\n})(window, Vue);"]}